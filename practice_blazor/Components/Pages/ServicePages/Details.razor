@page "/services/details"
@using Microsoft.EntityFrameworkCore
@using practice_blazor.Models
@inject IDbContextFactory<practice_blazor.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Service</h2>
    <hr />
    @if (service is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">CategoryName</dt>
            <dd class="col-sm-10">@service.CategoryName</dd>
            <dt class="col-sm-2">ServicePrice</dt>
            <dd class="col-sm-10">@service.ServicePrice</dd>
        </dl>
        <div>
            <a href="@($"/services/edit?id={service.Id}")">Edit</a> |
            <a href="@($"/services")">Back to List</a>
        </div>
    }
</div>

@code {
    private Service? service;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        service = await context.Service.FirstOrDefaultAsync(m => m.Id == Id);

        if (service is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
