@page "/clients/details"
@using Microsoft.EntityFrameworkCore
@using practice_blazor.Models
@inject IDbContextFactory<practice_blazor.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Clients</h2>
    <hr />
    @if (clients is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">ClientName</dt>
            <dd class="col-sm-10">@clients.ClientName</dd>
            <dt class="col-sm-2">Birthday</dt>
            <dd class="col-sm-10">@clients.Birthday</dd>
        </dl>
        <div>
            <a href="@($"/clients/edit?id={clients.id}")">Edit</a> |
            <a href="@($"/clients")">Back to List</a>
        </div>
    }
</div>

@code {
    private Clients? clients;

    [SupplyParameterFromQuery]
    private Guid id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        clients = await context.Clients.FirstOrDefaultAsync(m => m.id == id);

        if (clients is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
